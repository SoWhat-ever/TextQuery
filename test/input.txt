The following instructions are adapted from the Github documentation on duplicating a repository. The procedure below walks you through creating a private BusTub repository that you can use for development.
Go here to create a new repository under your account. Pick a name (e.g. bustub-private) and select Private for the repository visibility level.
On your development machine, create a bare clone of the public BusTub repository:
$ git clone --bare https://github.com/cmu-db/bustub.git bustub-public
Next, mirror the public BusTub repository to your own private BusTub repository. Suppose your GitHub name is student and your repository name is bustub-private. The procedure for mirroring the repository is then:
$ cd bustub-public
# If you pull / push over HTTPS
$ git push https://github.com/student/bustub-private.git master
# If you pull / push over SSH
$ git push git@github.com:student/bustub-private.git master
This copies everything in the public BusTub repository to your own private repository. You can now delete your local clone of the public repository:
$ cd ..
$ rm -rf bustub-public
Clone your private repository to your development machine:
# If you pull / push over HTTPS
$ git clone https://github.com/student/bustub-private.git
# If you pull / push over SSH
$ git clone git@github.com:student/bustub-private.git
Add the public BusTub repository as a second remote. This allows you to retrieve changes from the CMU-DB repository and merge them with your solution throughout the semester:
$ git remote add public https://github.com/cmu-db/bustub.git
You can verify that the remote was added with the following command:
$ git remote -v
origin	https://github.com/student/bustub-private.git (fetch)
origin	https://github.com/student/bustub-private.git (push)
public	https://github.com/cmu-db/bustub.git (fetch)
public	https://github.com/cmu-db/bustub.git (push)
You can now pull in changes from the public BusTub repository as needed with:
$ git pull public master
Disable GitHub Actions from the project settings of your private repository, otherwise you may run out of GitHub Actions quota.
Settings > Actions > General > Actions permissions > Disable actions.
We suggest working on your projects in separate branches. If you do not understand how Git branches work, learn how. If you fail to do this, you might lose all your work at some point in the semester, and nobody will be able to help you.
Build
We recommend developing BusTub on Ubuntu 20.04, Ubuntu 22.04, or macOS (M1/M2/Intel). We do not support any other environments (i.e., do not open issues or come to office hours to debug them). We do not support WSL.
Linux / Mac (Recommended)